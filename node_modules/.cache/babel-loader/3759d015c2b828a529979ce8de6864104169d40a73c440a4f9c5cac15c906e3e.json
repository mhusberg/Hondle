{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mats\\\\Projects\\\\Hondle\\\\hondle\\\\src\\\\components\\\\PropertiesCard.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertiesCard = ({\n  content,\n  colorClass\n}) => {\n  const toFirstLetterUpperCase = word => {\n    const upperWord = word[0].toUpperCase() + word.slice(1);\n    return upperWord;\n  };\n\n  //const addComma = content.replace(\" \", \", \");\n  const addComma = content.split(\" \").join(\", \");\n  const words = addComma.split(\" \");\n  console.log(words);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `properties-card ${colorClass}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"properties-card-content\",\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: toFirstLetterUpperCase(word)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = PropertiesCard;\nexport default PropertiesCard;\nvar _c;\n$RefreshReg$(_c, \"PropertiesCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PropertiesCard","content","colorClass","toFirstLetterUpperCase","word","upperWord","toUpperCase","slice","addComma","split","join","words","console","log","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mats/Projects/Hondle/hondle/src/components/PropertiesCard.tsx"],"sourcesContent":["import React from 'react';\r\n\r\n\r\nconst PropertiesCard = ({ content, colorClass }:{\r\n    content: string;\r\n    colorClass: string;\r\n\r\n}) => {\r\n    \r\n    const toFirstLetterUpperCase = (word: string) => {\r\n        const upperWord = word[0].toUpperCase() + word.slice(1);\r\n        return upperWord;\r\n    }\r\n\r\n    //const addComma = content.replace(\" \", \", \");\r\n    const addComma = content.split(\" \").join(\", \");\r\n    const words = addComma.split(\" \")\r\n    console.log(words);\r\n\r\n    return (\r\n        <div className={`properties-card ${colorClass}`}>\r\n            <div className=\"properties-card-content\">\r\n                {words.map((word, index) => (\r\n                    <div key={index}>{toFirstLetterUpperCase(word)}</div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PropertiesCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAInC,CAAC,KAAK;EAEF,MAAMC,sBAAsB,GAAIC,IAAY,IAAK;IAC7C,MAAMC,SAAS,GAAGD,IAAI,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC;IACvD,OAAOF,SAAS;EACpB,CAAC;;EAED;EACA,MAAMG,QAAQ,GAAGP,OAAO,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EAC9C,MAAMC,KAAK,GAAGH,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;EACjCG,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,oBACIZ,OAAA;IAAKe,SAAS,EAAG,mBAAkBZ,UAAW,EAAE;IAAAa,QAAA,eAC5ChB,OAAA;MAAKe,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACnCJ,KAAK,CAACK,GAAG,CAAC,CAACZ,IAAI,EAAEa,KAAK,kBACnBlB,OAAA;QAAAgB,QAAA,EAAkBZ,sBAAsB,CAACC,IAAI;MAAC,GAApCa,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqC,CACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACC,EAAA,GAzBItB,cAAc;AA2BpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}